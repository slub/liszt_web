@mixin container-paddings {
    padding-right: $container-padding-x;
    padding-left: $container-padding-x;

    @include media-breakpoint-between(md, xl) {
        padding-right: calc($container-padding-x * 2);
        padding-left: calc($container-padding-x * 2);
    }

    @include media-breakpoint-up(xl) {
        padding-right: 0;
        padding-left: 0;
    }
}


.container-xl {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    @include container-paddings;
    max-width: map-get($container-max-widths, 'xl');
}


// Todo: refactor frame paddings and create a mixins for col styles
.grid {
    display: grid;
  //  gap: 1rem;

    // frames in the 2 col Layout (with sidebar) have their own paddings because of full size grey background
    &.sidebar-left {
        padding-left: 0;
        padding-right: 0;

        .frame {
            @include container-paddings;
        }

    }

    &-2col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(2, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }

            }
        }

        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(2, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }

            }
        }
    }

    &-3col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(3, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }

            }
        }

        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(3, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }


            }
        }
    }


    &-4col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(4, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }

            }
        }

        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(4, 1fr);
                gap: $desktop-design-space;

                &.sidebar-left {
                    @include container-paddings;
                    .frame {
                        padding-left: 0;
                        padding-right: 0;
                    }
                }

            }
        }
    }
}

.grid-colspan {
    &-md-2 {
        @include media-breakpoint-up(md) {
            grid-column: span 2;
        }
    }

    &-lg-2 {
        @include media-breakpoint-up(lg) {
            grid-column: span 2;
        }
    }
}

.frame-gray-background, .section-gray-background {
    background-color: var(--lz-light-gray);
}



